# Pick a compiler
# For ROCm 6.2, use GCC 13 system-wide.
# For CUDA 11.8, use GCC 12 system-wide.
# For CUDA 12, use GCC 13 system-wide.
# For Clang, stick to the one that corresponds to U24 (or the latest LTS image) that is widely used for CI testing across GH.
# See https://github.com/orsonteodoro/oiledmachine-overlay/blob/master/SUPPORT_MATRIX.md
app-arch/zopfli clang-18.conf
app-text/poppler clang-19.conf
dev-libs/boost gcc-12.conf
dev-games/box2d clang-18.conf
gui-wm/hyprland clang-19.conf
media-gfx/blender clang-18.conf
media-gfx/optipng clang-18.conf
media-libs/libaom clang-18.conf
media-libs/libjpeg-turbo clang-18.conf
net-libs/webkit-gtk clang-18.conf
www-client/chromium clang-18.conf

dev-lang/python march-native.conf
dev-python/numpy march-native.conf
media-libs/opencv march-native.conf

#
# Adjusted Oflags for bugs and performance boosts.
#
# If there is no note, it is likely an optional or undergoing testing.
# Ebuilds may override these values.
#
# Currently we cap at -O2 so that _FORTIFY_SOURCE integrity doesn't degrade
# further for critical-security packages or packages that process untrusted data.
#
#app-arch/xz-utils O1.conf # It's slow when unpacking chromium.
app-arch/zopfli O2.conf # Long processing times
dev-debug/valgrind O2.conf
dev-games/box2d O1.conf # Visual studder with testbed's tumbler test with -Os, -Oz, -O0
dev-lang/python O1.conf # Big slow down observed when using either ver_test or has_version during emerge
#dev-libs/glib O2.conf
#dev-qt/qtwebengine O2.conf
#dev-util/perf O1.conf
gui-wm/dwl O1.conf
llvm-core/clang O1.conf # It's slow when building webkit-gtk.
llvm-core/llvm O1.conf # It's slow when building webkit-gtk.
media-gfx/optipng O2.conf # Long processing times
media-libs/dav1d O2.conf # Less than 25 FPS at <= -O1
media-libs/libvpx O2.conf # Less than 25 FPS at -O0
media-libs/embree O2.conf
#media-libs/gstreamer O2.conf
#media-libs/gst-plugins-bad O2.conf
#media-libs/gst-plugins-base O2.conf
#media-libs/gst-plugins-good O2.conf
#media-libs/gst-plugins-ugly O2.conf
#media-plugins/gst-plugins-aom O2.conf
#media-plugins/gst-plugins-libav O2.conf
#media-plugins/gst-plugins-opus O2.conf
#media-plugins/gst-plugins-rs O2.conf
media-video/ffmpeg O2.conf # Long encoding times
media-video/obs-studio O2.conf
#net-libs/libsoup O2.conf
net-libs/nodejs O2.conf
net-libs/webkit-gtk O2.conf # Note the ebuild has bugfixes to allow this to happen on the oiledmachine-overlay.
#net-libs/webkit-gtk Oshit.conf webkit-gtk.conf
sci-physics/bullet O1.conf
#sys-devel/binutils O2.conf # Package forces -O2
#sys-kernel/ot-sources Os.conf # Build faster
#www-client/chromium Oshit.conf chromium.conf
www-client/firefox O2.conf # Note the ebuild has bugfixes to allow this to happen on the oiledmachine-overlay.
www-client/surf O2.conf
x11-libs/cairo O2.conf # It can be disabled.
#x11-libs/pango O2.conf

# About the Oshit.conf.  The Oshit requires ebuilds from the oiledmachine-overlay.
# Essentially it allows -O flag level customization per internal library/package.
# The whole package gets compiled as -O1, but you can adjust the O1 ... Ofast level
# per environment flag.  It will have faster build times for large code bases,
# but faster runtimes for CPU bounded code or downgrades depending on if you use
# the feature or not.  -Ofast can be used for performance-critical code only.
# Security-critical code/packages can use only -O1 ... -O2, but not -O0.

# For skip resistant or max throughput
# media-libs/libaom fprefetch-loop-arrays.conf

# CCache for faster rebuilds for >= 1 hr builds
app-admin/keepassxc ccache.conf
app-office/libreoffice ccache.conf
app-text/poppler ccache.conf
dev-db/mysql ccache.conf
dev-db/mariadb ccache.conf
dev-libs/rccl ccache.conf
dev-games/*godot* ccache.conf
dev-python/jaxlib ccache.conf
dev-python/onnxruntime ccache.conf
dev-python/rife-ncnn-vulkan-python ccache.conf
dev-python/upscale-ncnn-py ccache.conf
dev-lang/flang ccache.conf
dev-lang/halide ccache.conf
dev-lang/mono ccache.conf
dev-lang/rocm-flang ccache.conf
dev-lang/llvm-flang ccache.conf
dev-libs/rccl ccache.conf
dev-qt/qtbase ccache.conf
dev-qt/qtdeclarative ccache.conf
dev-qt/qtwebengine ccache.conf
llvm-core/clang ccache.conf
llvm-core/llvm ccache.conf
llvm-core/mlir ccache.conf
llvm-runtimes/openmp ccache.conf
media-gfx/blender ccache.conf
media-gfx/inkscape ccache.conf
media-libs/opencv ccache.conf
media-libs/openusd ccache.conf
media-libs/osl ccache.conf
media-video/ffmpeg ccache.conf
net-libs/nodejs ccache.conf
net-libs/webkit-gtk ccache.conf
sci-libs/composable_kernel ccache.conf
sci-libs/jaxlib ccache.conf
sci-libs/miopen ccache.conf
sci-libs/onnxruntime ccache.conf
sci-libs/openvino ccache.conf
sci-libs/rocMLIR ccache.conf
sci-libs/tensorflow ccache.conf # Requires ebuild from oiledmachine-overlay
sci-ml/caffe2 ccache.conf
sys-devel/DPC++ ccache.conf
sys-libs/llvm-roc-libomp ccache.conf
sys-libs/mlir ccache.conf
www-client/chromium ccache.conf
www-client/firefox ccache.conf sccache.conf

# Thrash control for better multitasking
# (i.e. building while web browsing)
# Divide by 2 each time it lags.
# 32 core:  32 > 16 > 8 > 4 > 2 > 1
# 16 core:  16 > 8 > 4 > 2 > 1
# 12 core:  12 > 6 > 3 > 1
# 8 core:  8 > 4 > 2 > 1
# 6 core:  6 > 3 > 1
# 4 core:  4 > 2 > 1
dev-lang/spidermonkey j1.conf
dev-qt/qtwebengine j2.conf
dev-util/binaryen j2.conf
liri-base/aurora-compositor j2.conf
llvm-core/clang j1.conf
llvm-core/llvm j1.conf
media-gfx/blender j2.conf
net-libs/webkit-gtk j2.conf
sci-libs/caffe2 j1.conf
sci-libs/tensorflow j1.conf
www-client/chromium j2.conf
www-client/firefox j1.conf

# The *-1-thread.conf should only be applied to small MLOC.
# Always choose the utilitarian settings or algorithm that
# results in the least hours of suffering.

# Gold for faster linking
# By default the gold linker is monothread.
# gold-1-thread.conf could be used for severe thrashing.
# Add gold-n-threads.conf for link time reduction.
#llvm-core/clang gold.conf
#llvm-core/llvm gold.conf
media-gfx/blender gold.conf

# LLD for faster linking
# lld-1-thread.conf could be used for severe thrashing.
llvm-core/clang lld.conf
llvm-core/llvm lld.conf
net-libs/webkit-gtk lld.conf
www-client/firefox lld.conf

# mold for fastest linking
# mold-1-thread.conf could be used for severe thrashing.
sci-libs/tensorflow mold.conf

# Freeze commits for build determinism
#=llvm-core/llvm-16.0.0.9999* llvm-commit-16.conf
#=llvm-runtimes/compiler-rt-16* llvm-16-commit.conf
#=llvm-runtimes/compiler-rt-sanitizers-16* llvm-16-commit.conf
#=llvm-runtimes/libcxx-16* llvm-16-commit.conf
#=llvm-runtimes/libcxxabi-16* llvm-16-commit.conf
#=llvm-runtimes/openmp-16* llvm-16-commit.conf
#=llvm-core/lld-16* llvm-16-commit.conf
#app-arch/AppImageKit git-offline.conf
#dev-games/enigma enigma-commit.conf
#llvm-core/clang:16 llvm-16-commit.conf
#llvm-core/llvm:16 llvm-16-commit.conf
#media-plugins/gst-plugins-rs git-offline.conf
#media-sound/spotify git-offline.conf
#www-client/surf git-offline.conf

# Security relax
# The package manager doesn't like it when downloads are performed in the compile phase.

# Set not used in production
#app-arch/go-appimage no-network-sandbox.conf
#dev-games/godot-editor no-network-sandbox.conf
#dev-games/godot-export-templates* no-network-sandbox.conf
#net-libs/cef-bin no-sandbox.conf

# Set used in production
#app-arch/AppImageKit no-network-sandbox.conf
#app-arch/appimaged no-network-sandbox.conf
#dev-libs/libappimage no-network-sandbox.conf
#dev-libs/libfreenect no-network-sandbox.conf
#dev-lang/typescript npm-audit-off.conf no-network-sandbox.conf
#dev-dotnet/cake no-network-sandbox.conf
#dev-dotnet/dotdevelop no-network-sandbox.conf
#dev-dotnet/grpc-dotnet no-network-sandbox.conf
#dev-dotnet/gtk-sharp no-network-sandbox.conf
#dev-dotnet/GtkSharp no-network-sandbox.conf
#dev-dotnet/monodevelop no-network-sandbox.conf
#dev-dotnet/monogame no-network-sandbox.conf
#dev-dotnet/monogame-extended no-network-sandbox.conf
#dev-dotnet/msbuild no-network-sandbox.conf
#dev-dotnet/tesseract no-network-sandbox.conf
#dev-dotnet/tiledsharp no-network-sandbox.conf
#dev-dotnet/sfmldotnet no-network-sandbox.conf
#dev-dotnet/sharpnav no-ipc-sandbox.conf no-network-sandbox.conf no-pid-sandbox.conf
#dev-dotnet/velcrophysics no-network-sandbox.conf
#dev-games/box2d no-ipc-sandbox.conf no-pid-sandbox.conf
#dev-games/gdevelop no-network-sandbox.conf npm-utils-no-audit.conf npm-secaudit-no-die-on-audit.conf
#dev-games/godot-editor no-network-sandbox.conf no-sandbox.conf no-usersandbox.conf
#dev-games/godot-export-templates* no-network-sandbox.conf no-sandbox.conf no-usersandbox.conf
#dev-java/grpc-java no-network-sandbox.conf
#dev-lang/mono no-network-sandbox.conf
#dev-util/carbon-now-cli no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf
#dev-util/closure-compiler-npm no-network-sandbox.conf npm-utils-no-audit.conf
#dev-util/devhub no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf
#dev-util/lepton no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf #npm-utils-no-audit.conf
#dev-util/massCode no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf
#dev-util/theia no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf
#dev-util/uglifyjs no-network-sandbox.conf
#dev-vcs/breezy no-network-sandbox.conf
#media-gfx/blockbench no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf npm-utils-no-audit.conf
#media-gfx/texturelab no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf npm-utils-no-audit.conf
#media-gfx/upscayl no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf
#media-plugins/gst-plugins-rs no-network-sandbox.conf
#media-sound/spotify no-network-sandbox.conf
#media-video/ffmpeg no-ipc-sandbox.conf no-pid-sandbox.conf
#net-libs/cef-bin no-network-sandbox.conf
#net-im/caprine no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf
#sys-fs/ecryptfs-utils network-sandbox.conf
#sys-kernel/ot-sources no-network-sandbox.conf
#www-misc/instatron no-network-sandbox.conf npm-secaudit-no-die-on-audit.conf

# Privacy relax
#dev-util/carbon-now-cli npm-allow-analytics.conf
#dev-util/devhub npm-allow-analytics.conf
#dev-util/lepton npm-allow-analytics.conf
#media-gfx/blockbench npm-allow-analytics.conf
#media-gfx/upscayl npm-allow-session-replay.conf
#net-im/caprine npm-allow-analytics.conf
#dev-util/theia npm-allow-analytics.conf npm-allow-session-replay.conf

# Custom configs
#media-libs/harfbuzz harfbuzz.conf
app-antivirus/clamav features-test.conf
app-arch/zopfli zopfli.conf
dev-util/closure-compiler-npm closure-compiler-npm.conf
gui-apps/somebar somebar.conf
liri-base/shell liri-shell.conf
liri-base/session liri-session.conf
media-libs/vips vips.conf
media-libs/libaom libaom.conf
media-libs/libvpx libvpx.conf
media-video/ffmpeg ffmpeg.conf
media-video/obs-studio obs-studio.conf
x11-wm/dwm dwm.conf

# For BOLT
#dev-lang/lua no-strip.conf
app-arch/pigz no-strip.conf
media-libs/libspng no-strip.conf

# Debugging
#gui-wm/dwl clang.conf O1.conf allsan.conf nostrip.conf # Still cannot locate segfault.  Maybe it's in dependency.
#gui-wm/dwl asan.conf ubsan.conf nostrip.conf
#sys-libs/glibc ggdb3.conf splitdebug.conf nostrip.conf # Only use if you are a developer who uses valgrind.
