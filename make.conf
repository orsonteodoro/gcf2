#
# This is for copying and pasting not for replacing the entire file.
# The -fno-plt assumes now binding.  You may remove it globally or
# apply remove-fno-plt.conf to lazy binding packages in package.env.
#

#
# This value will be autoadjusted in the bashrc with per-package package.env
# envvar change. 
#
# MAKEOPTS levels:
#
#   -j$((${NCORES} * ${MPROCS})) = \
#			     Normal and tuned for throughput.  Trys to resist \
#			     empty pool of work caused by IO waits.  Used by \
#			     most packages except for large ones.  MPROCS is \
#			     a multiplier for the number of processes to spawn. \
#			     This corresponds to makeopts-normal.conf.
#
#   -j$((${NCORES} / 2))   = Swappy.  Assumes some work is better than no \
#			     work.  For example, a 4 actual core machine will \
#			     have 2 empty page lanes reserved per swap \
#			     transfer and 2 corresponding active page lanes \
#			     for goodput.  Use this if it appears that the \
#			     swap overhead appears to be counterproductive or \
#			     when multitasking severely is not working \
#			     properly. This corresponds to makeopts-swappy.conf.
#
#   -j${NCORES}		   = Plain.  One thread per core.  Not recommended \
#			     because of the possibility of disk IO waits can \
#			     cause a core be underutilized. \
#			     This corresponds to makeopts-plain.conf.
#
#   -j1			   = OOM resistant.  Again assumes some work is better \
#			     than no work. \
#			     This corresponds to makeopts-oom.conf or \
#			     makeopts-broken.conf.
#
# The below NCORES value is the number of actual CPU cores not multiplied by \
# threads per core.
#
# This also implies you have 4 * ${MPROCS} * ${NCORES} GiB of total uncompressed
# memory or (4 * ${MPROCS} * ${NCORES}) / 2.1 GiB of total memory with
# zswap compression.  Not providing enough total memory can lead to OOM (Out of
# Memory), forced resets, and loss of unsaved work (data loss).
#
MPROCS="2"
NCORES="4"

DEFAULT_OPT_LEVEL="-Os"
COMMON_FLAGS="-march=native ${DEFAULT_OPT_LEVEL} -freorder-blocks-algorithm=simple -fno-inline -fomit-frame-pointer -frename-registers -fno-plt -mindirect-branch=thunk -mindirect-branch-register -flto=thin -fopt-info-vec -pipe"
CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
LDFLAGS="${LDFLAGS} -flto=thin"
USE="${USE} custom-cflags lto pgo gold -default-gold"

# You can only use one LTO compiler per system, from stage 3 to now.  Switching
# compilers is not allowed.  This decision is important because of the
# static-libs issue, and there is no universal compatible IR (Intermediate
# Representation) between code left in the .o files.  Some packages may switch
# if the dependencies are completely isolated, bundled, and internal.
# This may preclude the use of Clang plain CFI.
# (required)
CC_LTO="clang"    # valid values: gcc clang
CXX_LTO="clang++" # valid values: g++ clang++

# These refer to the toolchain used to build glibc or musl.
# (required)
CC_LIBC="gcc"     # valid values: gcc clang
CXX_LIBC="g++"    # valid values: g++ clang++

# Globals (Uncomment if you want them enabled or controlled globally)
# Unset is equivalent to disabled.
# FORCE_PREFETCH_LOOP_ARRAYS=1 # can be 0 or 1 or unset or empty
CFI_BASELINE="cfi"		# arg to -fsanitize=
#GCF_SHOW_FLAGS="1"		# can be 0 or 1 or unset or empty
#USE_CLANG_CFI="1"		# can be 0 or 1 or unset or empty
USE_GOLDLTO="0"			# can be 0 or 1 or unset or empty
USE_THINLTO="1"			# can be 0 or 1 or unset or empty

# If you are a modder or developer, it is recommended to enable logging
# to improve bashrc filtering or to find lazy binding linked packages.
# Uncomment below to add logging.
#FEATURES="${FEATURES} binpkg-logs"
#PORTAGE_LOGDIR="/var/log/emerge/build-logs"

# Added to /etc/portage/package.use/gcc
# sys-devel/gcc graphite -lto
